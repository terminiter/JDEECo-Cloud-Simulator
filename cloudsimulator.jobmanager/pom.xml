<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>cloudsimulator.jobmanager</artifactId>
	<name>cloudsimulator.jobmanager</name>
	<packaging>jar</packaging>

	<parent>
		<groupId>cz.cuni.mff.d3s.jdeeco</groupId>
		<artifactId>cloudsimulator.serversparent</artifactId>
		<relativePath>../cloudsimulator.serversparent/pom.xml</relativePath>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<war.name>jdeeco-simulator-jobmanager</war.name>

		<!-- versions -->
		<jgit.version>3.6.0.201412230720-r</jgit.version>
		<maven-invoker.version>2.2</maven-invoker.version>

		<joda-time.version>2.7</joda-time.version>
	</properties>

	<profiles>
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<profile.storage.remoteRoot>c:\Users\Jan\simulationdrive</profile.storage.remoteRoot>
				<profile.storage.localRoot>c:\Users\Jan\simulationdrive</profile.storage.localRoot>
			</properties>
		</profile>
		<profile>
			<id>production</id>
			<activation>
				<property>
					<name>environment</name>
					<value>production</value>
				</property>
			</activation>
			<properties>
				<profile.storage.remoteRoot>/media/simulationdrive</profile.storage.remoteRoot>
				<profile.storage.localRoot>/media/simulationdrive</profile.storage.localRoot>
			</properties>
		</profile>
	</profiles>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>development/</exclude>
				</excludes>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>${buildnumber-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>true</doCheck>
					<doUpdate>false</doUpdate>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>compile-copy</id>
						<phase>compile</phase>
						<configuration>
							<target>
								<!-- Generate property file build.properties with buildNumber, buildTimestamp and revision parameters. Revision is 
									set from changeSet parameter from buildnumber-maven-plugin. -->
								<!-- <echo file="src/main/resources/properties/build.properties">build.buildNumber=${timestamp}${line.separator}</echo> -->
								<echo file="src/main/resources/properties/build.properties">build.buildTimestamp=${timestamp}${line.separator}</echo>
								<!-- <echo file="src/main/resources/properties/build.properties" append="true">build.revision=${changeSet}</echo> -->

								<!-- Copy build number -->
								<copy file="src/main/resources/properties/build.properties" todir="${project.build.directory}/classes/properties" />

								<!-- Copy OpenStack credentials -->
								<copy file="${basedir}/../../jdeeco-simulator-openstack-credentials.properties" tofile="${project.build.directory}/classes/properties/openstack-credentials.properties" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>cz.cuni.mff.d3s.jdeeco.cloudsimulator.jobmanager.JobManagerApp</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- Dependent modules -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>cloudsimulator.data</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>cloudsimulator.servers</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Spring ORM -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>


		<!-- Git -->
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>${jgit.version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Maven -->
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-invoker</artifactId>
			<version>${maven-invoker.version}</version>
		</dependency>


		<!-- Time -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda-time.version}</version>
		</dependency>
	</dependencies>

</project>